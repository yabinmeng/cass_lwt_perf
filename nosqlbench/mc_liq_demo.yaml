bindings:
  scheme_txt: HashedLineToString('src_text/scheme.txt')
  currency_txt: HashedLineToString('src_text/currency.txt')
  account_id: Mod(<<acct_num:500>>); ToString(); Prefix('Account-')

  ## LWT testing
  #initial_balance: SaveLong('cycle'); CoinFunc(1.0, Flow(Uniform(1, 9)->int, Mul(1000)->int), FixedValue(0))
  initial_balance: SaveLong('cycle'); CoinFunc(1.0, Flow(CycleRange(1, 9)->int, Mul(1000)->int), FixedValue(0))

  #- lwt-rndm
  #new_balance1: SaveLong('cycle'); CoinFunc(1.0, Flow(Uniform(1, 9)->int, Mul(1000)->int), FixedValue(0))
  new_balance1: SaveLong('cycle'); CoinFunc(1.0, Flow(CycleRange(1, 9)->int, Mul(1000)->int), FixedValue(0))
  #old_balance: SaveLong('cycle'); CoinFunc(<<lwt_ratio:0.5>>, FixedValue(999999), Flow(CycleRange(1, 9)->int, Mul(1000)->int))
  old_balance: SaveLong('cycle'); CoinFunc(<<lwt_ratio:1.0>>, Flow(Uniform(1, 9)->int, Mul(1000)->int), FixedValue(0))

  #- lwt-majgood
  #new_balance2: SaveLong('cycle'); CoinFunc(1.0, Flow(Uniform(1, 9)->int, Mul(1000)->int), FixedValue(0))
  new_balance2: SaveLong('cycle'); CoinFunc(1.0, Flow(CycleRange(1, 9)->int, Mul(1000)->int), FixedValue(0))

  #- lwt-majbad
  #new_balance3: SaveLong('cycle'); CoinFunc(1.0, Flow(Uniform(1, 9)->int, Mul(1000)->int), FixedValue(0))
  new_balance3: SaveLong('cycle'); CoinFunc(1.0, Flow(CycleRange(1, 9)->int, Mul(1000)->int), FixedValue(0))

  ## 'c' (credit) or 'd' (debit)
  transaction_type_txt: SaveLong('cycle'); CoinFunc(<<cred_deb_ratio:0.5>>, FixedValue("c"), FixedValue("d"))
  #transaction_type_txt: |
  #   HashedLineToString('src_text/transaction_type.txt');
  #   SaveString('trn_type')

  ## for testing simplicity purpose, each transaction amount can only take the
  ## following values: 10, 20, ... until 200
  ## NOTE: for credit transaction, the amount value should be positive
  ##       for debit transaction, the amount value should be negative
  amount: SaveLong('cycle'); CoinFunc(<<cred_deb_ratio:0.5>>, Flow(HashRange(1,21),Mul(10)->int), Flow(HashRange(1,21),Mul(-10)->int))
  #amount: |
  #   Save('cycle');
  #   HashRange(1,21); Mul(10)->int;
  #   Load('cycle');
  #   SaveInteger('txn_amnt_raw');
  #   Expr('if(trn_type == "c") { txn_amnt_raw } else { -1 * txn_amnt_raw }');
  #   ToInt()

  ## total 2500 unqiue transaction IDs and each transaction ID has 2
  ## transactions: one as credit and another as debit
  ## -- Max. 5000 transaction records in "transaction" table
  transaction_id:  Mod(<<txn_num:5000>>); ToString(); Prefix('TxnID-')

  correlation_id: Add(1); ToString(); Prefix('CorrelationID-')
  sender_acct: HashInterval(1, 200); ToString(); Prefix('Account-')
  receiver_acct: HashInterval(201, 400); ToString(); Prefix('Account-')

blocks:
  - tags:
      phase: schema
    params:
      prepared: false
    statements:
     - create-keyspace: |
         create keyspace if not exists <<keyspace:mc_liq_demo>>
         WITH replication = {'class': 'NetworkTopologyStrategy', 'DC1': '<<rf:3>>', 'DC2': '<<rf:3>>'}
         AND durable_writes = true;
       tags:
         name: create-keyspace
     - create-table-liquid-acct : |
         create table if not exists <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>> (
           scheme text,
           currency text,
           account_id text,
           balance int,
           PRIMARY KEY ((scheme, currency, account_id))
         );
       tags:
         name: create-table-transaction
     - create-table-transaction : |
         create table if not exists <<keyspace:mc_liq_demo>>.<<table_txn:transaction>> (
           scheme text,
           currency text,
           transaction_id text,
           transaction_type text,  // ‘d’ (debit) and ‘c’ (credit
           amount int,
           correlation_id text,
           receiver_acct text,
           sender_acct text,
           PRIMARY KEY ((scheme, currency, transaction_id), transaction_type)
         );
       tags:
         name: create-table-transaction
     - truncate-table-liquid-acct: |
         truncate table <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>;
       tags:
         name: truncate-table-liquid-acct
     - truncate-table-transaction: |
         truncate table <<keyspace:mc_liq_demo>>.<<table_txn:transaction>>;
       tags:
         name: truncate-table-transaction

  - tags:
      phase: create-transactions
    params:
      prepared: true
      cl: <<write_cl:LOCAL_QUORUM>>
    statements:
      - create-transactions: |
          INSERT INTO <<keyspace:mc_liq_demo>>.<<table_txn:transaction>> (scheme, currency, transaction_id, transaction_type, amount, correlation_id, receiver_acct, sender_acct)
          VALUES ({scheme_txt}, {currency_txt}, {transaction_id}, {transaction_type_txt}, {amount}, {correlation_id}, {receiver_acct}, {sender_acct});

  - tags:
      phase: create-liquid-accounts
    params:
      prepared: true
      cl: <<write_cl:LOCAL_QUORUM>>
    statements:
      - create-liquid-accounts: |
          INSERT INTO <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>> (scheme, currency, account_id, balance)
          VALUES ({scheme_txt}, {currency_txt}, {account_id}, {initial_balance});


  - tags:
      phase: nolwt-main
      type: write
    params:
      ratio: <<write_ratio:9>>
      cl: <<write_cl:LOCAL_QUORUM>>
    statements:
      - no-lwt-main-write: |
          UPDATE <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>
          SET balance = {initial_balance}
          WHERE scheme = {scheme_txt} AND currency = {currency_txt} AND account_id = {account_id};
  - tags:
      phase: nolwt-main
      type: read
    params:
      ratio: <<read_ratio:1>>
      cl: <<read_cl:LOCAL_QUORUM>>
    statements:
      - no-lwt-main-read: |
          SELECT *
          FROM <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>
          WHERE scheme = {scheme_txt} AND currency = {currency_txt} AND account_id = {account_id};

  - tags:
      phase: lwt-main-rndm
      type: write
    params:
      ratio: <<write_ratio:9>>
      cl: <<write_cl:LOCAL_QUORUM>>
      serial_cl: <<serial_cl:LOCAL_SERIAL>>
    statements:
      - lwt-main-rndm-write: |
          UPDATE <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>
          SET balance = {new_balance1}
          WHERE scheme = {scheme_txt} AND currency = {currency_txt} AND account_id = {account_id}
          IF balance = {old_balance};
        params:
          instrument: true
  - tags:
      phase: lwt-main-rndm
      type: read
    params:
      ratio: <<read_ratio:1>>
      cl: <<read_cl:LOCAL_QUORUM>>
    statements:
      - lwt-main-rndm-read: |
          SELECT *
          FROM <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>
          WHERE scheme = {scheme_txt} AND currency = {currency_txt} AND account_id = {account_id};
        params:
          instrument: TEMPLATE(instrument-reads,TEMPLATE(instrument,true))
          instrument: true


  - tags:
      phase: lwt-main-majgood
      type: write
    params:
      ratio: <<write_ratio:9>>
      cl: <<write_cl:LOCAL_QUORUM>>
      serial_cl: <<serial_cl:LOCAL_SERIAL>>
    statements:
      - lwt-main-majgood-write: |
          UPDATE <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>
          SET balance = {new_balance2}
          WHERE scheme = {scheme_txt} AND currency = {currency_txt} AND account_id = {account_id}
          IF balance >= 2000;
        params:
          instrument: true
  - tags:
      phase: lwt-main-majgood
      type: read
    params:
      ratio: <<read_ratio:1>>
      cl: <<read_cl:LOCAL_QUORUM>>
    statements:
      - lwt-main-majgood-read: |
          SELECT *
          FROM <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>
          WHERE scheme = {scheme_txt} AND currency = {currency_txt} AND account_id = {account_id};
        params:
          instrument: true

  - tags:
      phase: lwt-main-majbad
      type: write
    params:
      ratio: <<write_ratio:9>>
      cl: <<write_cl:LOCAL_QUORUM>>
      serial_cl: <<serial_cl:LOCAL_SERIAL>>
    statements:
      - lwt-main-majbad-write: |
          UPDATE <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>
          SET balance = {new_balance3}
          WHERE scheme = {scheme_txt} AND currency = {currency_txt} AND account_id = {account_id}
          IF balance >= 6000;
        params:
          instrument: true
  - tags:
      phase: lwt-main-majbad
      type: read
    params:
      ratio: <<read_ratio:1>>
      cl: <<read_cl:LOCAL_QUORUM>>
    statements:
      - lwt-main-majbad-read: |
          SELECT *
          FROM <<keyspace:mc_liq_demo>>.<<table_acct:liquid_acct>>
          WHERE scheme = {scheme_txt} AND currency = {currency_txt} AND account_id = {account_id};
        params:
          instrument: true
